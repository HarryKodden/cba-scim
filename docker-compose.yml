version: "3"

services:
  db:
    image: mongo:latest
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    volumes:
      - "mongo_data:/data/db"
    networks:
      - localnet
    command:
      - "--wiredTigerCacheSizeGB=2"
      - "--bind_ip_all"
      - "--auth"

  express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@db:27017?authSource=admin
    networks:
      - localnet
    links:
      - db

  rabbit:
    image: "rabbitmq:management"
    hostname: rabbit
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBIT_USERNAME}
      - RABBITMQ_DEFAULT_PASS=${RABBIT_PASSWORD}
    networks:
      - localnet
    ports:
      - 15672:15672
    volumes:
      - "rabbitmq_data:/var/lib/rabbitmq"

  server:
    #   image: "scim:latest"
    build:
      context: go-scim
      dockerfile: ../docker/Dockerfile.scim
    command: ["/usr/bin/scim", "api"]
    environment:
      - HTTP_PORT=8080

      - MONGO_HOST=db
      - MONGO_PORT=27017
      - MONGO_USERNAME=${MONGO_USERNAME}
      - MONGO_PASSWORD=${MONGO_PASSWORD}
      - MONGO_DATABASE=${MONGO_DATABASE}
      - MONGO_OPT=authSource=admin

      - RABBIT_HOST=rabbit
      - RABBIT_PORT=5672
      - RABBIT_USERNAME=${RABBIT_USERNAME}
      - RABBIT_PASSWORD=${RABBIT_PASSWORD}

      - SERVICE_PROVIDER_CONFIG=/usr/share/scim/public/service_provider_config.json
      - SCHEMAS_DIR=/usr/share/scim/public/schemas
      - USER_RESOURCE_TYPE=/usr/share/scim/public/resource_types/user_resource_type.json
      - GROUP_RESOURCE_TYPE=/usr/share/scim/public/resource_types/group_resource_type.json
      - MONGO_METADATA_DIR=/usr/share/scim/public/mongo_metadata
    networks:
      - localnet
    ports:
      - ${SCIM_PORT:-80}:8080
    links:
      - db
      - rabbit

  sram:
    build:
      context: .
      dockerfile: docker/Dockerfile.sram
    container_name: sram
    hostname: sram
    restart: always
    networks:
      - localnet
    links:
      - server
      - rabbit
    environment:
      LOG_LEVEL: INFO

      LDAP_HOST: ${LDAP_HOST:-ldaps://ldap.sram.surf.nl}
      LDAP_MODE: IP_V4_ONLY

      LDAP_BASENAME: "dc=flat,dc=${SERVICE_ENTITY_ID},dc=services,dc=sram,dc=surf,dc=nl"
      LDAP_USERNAME: "cn=admin,dc=${SERVICE_ENTITY_ID},dc=services,dc=sram,dc=surf,dc=nl"
      LDAP_PASSWORD: ${SERVICE_LDAP_PASSWORD}

      LDAP_PEOPLE_KEY: uid
      LDAP_PEOPLE_OBJECTCLASS: inetOrgPerson

      LDAP_GROUP_KEY: cn
      LDAP_GROUP_OBJECTCLASS: groupOfMembers

      SCIM_SERVER: ${SCIM_SERVER:-http://server:8080}
      SCIM_BEARER: ${SCIM_BEARER}
      SCIM_VERIFY: ${SCIM_VERIFY:-True}

      BROKER_HOST: http://rabbit
      BROKER_PORT: 15672
      BROKER_USER: ${RABBIT_USERNAME}
      BROKER_PASS: ${RABBIT_PASSWORD}

      SERVICES: ${SERVICE_ENTITY_ID}=${SERVICE_PASSWORD}

  cba:
    build:
      context: .
      dockerfile: docker/Dockerfile.cba
    container_name: cba
    hostname: cba
    restart: always
    networks:
      - localnet
    links:
      - server
      - rabbit
    environment:
      LOG_LEVEL: INFO

      SCIM_SERVER: ${SCIM_SERVER:-http://server:8080}
      SCIM_BEARER: ${SCIM_BEARER}
      SCIM_VERIFY: ${SCIM_VERIFY:-True}

      URI: amqp://${SERVICE_ENTITY_ID:-guest}:${SERVICE_PASSWORD:-guest}@rabbit:5672/${SERVICE_ENTITY_ID:-%2F}
volumes:
  rabbitmq_data:
    driver: local
  mongo_data:
    driver: local

networks:
  localnet:
    driver: bridge
